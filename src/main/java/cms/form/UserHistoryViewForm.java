package cms.form;

import databasetest.JDBC;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author ADMIN
 */
public class UserHistoryViewForm extends javax.swing.JPanel {

    /**
     * Creates new form UserHistoryViewForm
     */
    public UserHistoryViewForm() {
        initComponents();
    }
    
    private String username = "Rehan Rich"; // chỗ này mình viết cái function getUsername rồi thay zô đây là okayyy

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbHistory = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        tfBookingStatus = new javax.swing.JTextField();
        tfTotalPrice = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfMovieTitle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfBookingDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfBookingType = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(900, 600));
        setMinimumSize(new java.awt.Dimension(900, 600));

        tbHistory.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        tbHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking Date", "Booking Type", "Total Price", "Movie Title", "Booking Status"
            }
        ));
        tbHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHistoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHistory);

        btnRefresh.setBackground(new java.awt.Color(223, 177, 96));
        btnRefresh.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(null);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSearch.setBackground(new java.awt.Color(93, 202, 209));
        btnSearch.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setBorder(null);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(125, 225, 154));
        btnClear.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnClear.setText("Clear");
        btnClear.setBorder(null);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tfBookingStatus.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N

        tfTotalPrice.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        jLabel10.setText("Movie Title");

        tfMovieTitle.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        jLabel1.setText("Booking Date");

        tfBookingDate.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        jLabel3.setText("Booking Type");

        tfBookingType.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        jLabel12.setText("Booking Status");

        jLabel2.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        jLabel2.setText("Total Price");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfTotalPrice)
                            .addComponent(tfBookingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfBookingStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(tfBookingType, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(tfBookingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(tfTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(tfBookingStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(tfMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfBookingType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHistoryMouseClicked
        int selectedRow = tbHistory.getSelectedRow();
        if (selectedRow >= 0) {
            tfBookingDate.setText(tbHistory.getValueAt(selectedRow, 0).toString());
            tfBookingStatus.setText(tbHistory.getValueAt(selectedRow, 1).toString());
            tfTotalPrice.setText(tbHistory.getValueAt(selectedRow, 2).toString());
            tfMovieTitle.setText(tbHistory.getValueAt(selectedRow, 3).toString());
            tfBookingType.setText(tbHistory.getValueAt(selectedRow, 4).toString());
        }
    }//GEN-LAST:event_tbHistoryMouseClicked

    private void RefreshButton() {
        try {
            JDBC jdbc = new JDBC();
            String query = "SELECT " +
                                "t.TicketID, " +
                                "t.BookingDate, " +
                                "t.BookingStatus, " +
                                "t.TotalPrice, " +
                                "m.Title AS MovieTitle, " +
                                "c.Name AS CustomerName, " +
                                "s.Name AS StaffName, " +
                                "t.BookingType " +
                            "FROM Ticket t " +
                            "LEFT JOIN TicketSeat ts ON t.TicketID = ts.TicketID " +
                            "LEFT JOIN SeatSchedule ss ON ts.ScheduleSeatID = ss.ScheduleSeatID " +
                            "LEFT JOIN Schedule sch ON ss.ScheduleID = sch.ScheduleID " +
                            "LEFT JOIN Movie m ON sch.MovieID = m.MovieID " +
                            "LEFT JOIN [User] c ON t.CustomerID = c.UserID " +
                            "LEFT JOIN [User] s ON t.StaffID = s.UserID " +
                            "WHERE c.Name = '" + username + "';";
            
            Statement pstm = jdbc.getConn().createStatement();
            ResultSet result = pstm.executeQuery(query);
            
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tbHistory.getModel();
            model.setRowCount(0);
            
            while (result.next()) {
                Object[] row = {
                    result.getString("BookingDate"),
                    result.getString("BookingType"),
                    result.getDouble("TotalPrice"),
                    result.getString("MovieTitle"),
                    result.getString("BookingStatus")
                };
                model.addRow(row);
            }
            
            jdbc.close();
            
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Error occurred while fetching data: " + e.getMessage(),
                "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        RefreshButton();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            JDBC jdbc = new JDBC();
            String query = "SELECT " +
                                "t.TicketID, " +
                                "t.BookingDate, " +
                                "t.BookingStatus, " +
                                "t.TotalPrice, " +
                                "m.Title AS MovieTitle, " +
                                "c.Name AS CustomerName, " +
                                "s.Name AS StaffName, " +
                                "t.BookingType " +
                            "FROM Ticket t " +
                            "LEFT JOIN TicketSeat ts ON t.TicketID = ts.TicketID " +
                            "LEFT JOIN SeatSchedule ss ON ts.ScheduleSeatID = ss.ScheduleSeatID " +
                            "LEFT JOIN Schedule sch ON ss.ScheduleID = sch.ScheduleID " +
                            "LEFT JOIN Movie m ON sch.MovieID = m.MovieID " +
                            "LEFT JOIN [User] c ON t.CustomerID = c.UserID " +
                            "LEFT JOIN [User] s ON t.StaffID = s.UserID " +
                            "WHERE c.Name = '" + username + "' ";

            if (!tfBookingDate.getText().trim().isEmpty()) {
                query += " AND t.BookingDate LIKE '%" + tfBookingDate.getText().trim() + "%'";
            }

            if (!tfBookingType.getText().trim().isEmpty()) {
                query += " AND t.BookingType LIKE '%" + tfBookingType.getText().trim() + "%'";
            }

            if (!tfTotalPrice.getText().trim().isEmpty()) {
                query += " AND t.TotalPrice = " + tfTotalPrice.getText().trim();
            }

            if (!tfMovieTitle.getText().trim().isEmpty()) {
                query += " AND m.Title LIKE '%" + tfMovieTitle.getText().trim() + "%'";
            }

            if (!tfBookingStatus.getText().trim().isEmpty()) {
                query += " AND t.BookingStatus LIKE '%" + tfBookingStatus.getText().trim() + "%'";
            }

            Statement stmt = jdbc.getConn().createStatement();
            ResultSet result = stmt.executeQuery(query);

            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tbHistory.getModel();
            model.setRowCount(0);
            
            while (result.next()) {
                Object[] row = {
                    result.getString("BookingDate"),
                    result.getString("BookingType"),
                    result.getDouble("TotalPrice"),
                    result.getString("MovieTitle"),
                    result.getString("BookingStatus")
                };
                model.addRow(row);
            }

            jdbc.close();

        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this,
            "Error occurred while searching: " + e.getMessage(),
            "Error",
            javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        tfBookingDate.setText("");
        tfBookingStatus.setText("");
        tfTotalPrice.setText("");
        tfMovieTitle.setText("");
        tfBookingType.setText("");
        RefreshButton();
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbHistory;
    private javax.swing.JTextField tfBookingDate;
    private javax.swing.JTextField tfBookingStatus;
    private javax.swing.JTextField tfBookingType;
    private javax.swing.JTextField tfMovieTitle;
    private javax.swing.JTextField tfTotalPrice;
    // End of variables declaration//GEN-END:variables
}
